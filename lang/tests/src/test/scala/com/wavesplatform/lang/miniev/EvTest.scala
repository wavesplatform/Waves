package com.wavesplatform.lang.miniev

import com.wavesplatform.common.utils.EitherExt2
import com.wavesplatform.lang.Common
import com.wavesplatform.lang.directives.DirectiveSet
import com.wavesplatform.lang.directives.values.{Account, Expression}
import com.wavesplatform.lang.script.Script
import com.wavesplatform.lang.script.v1.ExprScript.ExprScriptImpl
import com.wavesplatform.lang.utils.lazyContexts
import com.wavesplatform.test.*


class EvTest extends FreeSpec {
  "foo" in {
    val scripts = Seq(
//      ("func A(x: Int, y: Int) = x + y; A(1, 2) == 3", "BQoBAAAAAUEAAAACAAAAAXgAAAABeQkAAGQAAAACBQAAAAF4BQAAAAF5CQAAAAAAAAIJAQAAAAFBAAAAAgAAAAAAAAAAAQAAAAAAAAAAAgAAAAAAAAAAAzMPzEQ=", 4, 2),
//      ("func A(x: Int, y: Int, z: Int) = x + y; A(1, 2, 3) == 3", "BQoBAAAAAUEAAAADAAAAAXgAAAABeQAAAAF6CQAAZAAAAAIFAAAAAXgFAAAAAXkJAAAAAAAAAgkBAAAAAUEAAAADAAAAAAAAAAABAAAAAAAAAAACAAAAAAAAAAADAAAAAAAAAAADZO4krg==", 4, 2),
//      ("func A(x: Int, y: Int, z: Int) = x + y + z; A(1, 2, 3) == 6", "BQoBAAAAAUEAAAADAAAAAXgAAAABeQAAAAF6CQAAZAAAAAIJAABkAAAAAgUAAAABeAUAAAABeQUAAAABegkAAAAAAAACCQEAAAABQQAAAAMAAAAAAAAAAAEAAAAAAAAAAAIAAAAAAAAAAAMAAAAAAAAAAAbT+Mrp", 6, 3),
//      ("func A(x: Int, y: Int) = x + y; A(1+2, 3+4) == 10", "BQoBAAAAAUEAAAACAAAAAXgAAAABeQkAAGQAAAACBQAAAAF4BQAAAAF5CQAAAAAAAAIJAQAAAAFBAAAAAgkAAGQAAAACAAAAAAAAAAABAAAAAAAAAAACCQAAZAAAAAIAAAAAAAAAAAMAAAAAAAAAAAQAAAAAAAAAAApvNs+6", 6, 4),
//      ("func A(x: Int, y: Int, z: Int) = x + y; A(1+2, 3+4, 5+6) == 10", "BQoBAAAAAUEAAAADAAAAAXgAAAABeQAAAAF6CQAAZAAAAAIFAAAAAXgFAAAAAXkJAAAAAAAAAgkBAAAAAUEAAAADCQAAZAAAAAIAAAAAAAAAAAEAAAAAAAAAAAIJAABkAAAAAgAAAAAAAAAAAwAAAAAAAAAABAkAAGQAAAACAAAAAAAAAAAFAAAAAAAAAAAGAAAAAAAAAAAKtr2G5Q==", 7, 5),
//      ("let a = 1 + 2;let b = 3 + 4;let c = 5 + 6;func A(x: Int, y: Int) = x + y; A(a, b) == 10", "BQQAAAABYQkAAGQAAAACAAAAAAAAAAABAAAAAAAAAAACBAAAAAFiCQAAZAAAAAIAAAAAAAAAAAMAAAAAAAAAAAQEAAAAAWMJAABkAAAAAgAAAAAAAAAABQAAAAAAAAAABgoBAAAAAUEAAAACAAAAAXgAAAABeQkAAGQAAAACBQAAAAF4BQAAAAF5CQAAAAAAAAIJAQAAAAFBAAAAAgUAAAABYQUAAAABYgAAAAAAAAAACvKnofI=", 8, 4),
//      ("let a = 1 + 2;let b = 3 + 4;let c = 5 + 6;func A(x: Int, y: Int, z: Int) = x + y; A(a, b, c) == 10", "BQQAAAABYQkAAGQAAAACAAAAAAAAAAABAAAAAAAAAAACBAAAAAFiCQAAZAAAAAIAAAAAAAAAAAMAAAAAAAAAAAQEAAAAAWMJAABkAAAAAgAAAAAAAAAABQAAAAAAAAAABgoBAAAAAUEAAAADAAAAAXgAAAABeQAAAAF6CQAAZAAAAAIFAAAAAXgFAAAAAXkJAAAAAAAAAgkBAAAAAUEAAAADBQAAAAFhBQAAAAFiBQAAAAFjAAAAAAAAAAAKOeIr0Q==", 10, 5),
//      ("let a = 1 + 2;let b = 3 + 4;let c = 5 + 6;func A(x: Int, y: Int, z: Int) = x + x; A(a+1, b+2, c+3) == 8", "BQQAAAABYQkAAGQAAAACAAAAAAAAAAABAAAAAAAAAAACBAAAAAFiCQAAZAAAAAIAAAAAAAAAAAMAAAAAAAAAAAQEAAAAAWMJAABkAAAAAgAAAAAAAAAABQAAAAAAAAAABgoBAAAAAUEAAAADAAAAAXgAAAABeQAAAAF6CQAAZAAAAAIFAAAAAXgFAAAAAXgJAAAAAAAAAgkBAAAAAUEAAAADCQAAZAAAAAIFAAAAAWEAAAAAAAAAAAEJAABkAAAAAgUAAAABYgAAAAAAAAAAAgkAAGQAAAACBQAAAAFjAAAAAAAAAAADAAAAAAAAAAAIY2FB4Q==", 13, 8),
//("""V5: true""", "BQbtKNoM", 0, 0),
//("""V3: unit == Unit()""", "AwkAAAAAAAACBQAAAAR1bml0CQEAAAAEVW5pdAAAAACd7sMa", 2, 2),
//("""V3: 12345 == 12345""", "AwkAAAAAAAACAAAAAAAAADA5AAAAAAAAADA5+DindQ==", 1, 1),
//("""V3: let x = 2 * 2; x == 4""", "AwQAAAABeAkAAGgAAAACAAAAAAAAAAACAAAAAAAAAAACCQAAAAAAAAIFAAAAAXgAAAAAAAAAAARdrwMC", 3, 2),
//("""V3: let a = "A"; let b = "B"; a + b == "AB"""", "AwQAAAABYQIAAAABQQQAAAABYgIAAAABQgkAAAAAAAACCQABLAAAAAIFAAAAAWEFAAAAAWICAAAAAkFC8C4jQA==", 13, 11),
//("""V3: if true then if true then true else false else false""", "AwMGAwYGBwdYjCji", 2, 0),
//("""V5: let a = {let b = {let c = 1; 0}; 0}; true""", "BQQAAAABYQQAAAABYgQAAAABYwAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAbdLmrq", 0, 0),
//("""toString(Address(base58'3P3336rNSSU8bDAqDb6S5jNs8DJb2bfNmpf')) == "3P3336rNSSU8bDAqDb6S5jNs8DJb2bfNmpf"""", "BQkAAAAAAAACCQAEJQAAAAEJAQAAAAdBZGRyZXNzAAAAAQEAAAAaAVcMIZxOsk2Gw5Avd0ztqi+phtb1Bb83MiQCAAAAIzNQMzMzNnJOU1NVOGJEQXFEYjZTNWpOczhESmIyYmZObXBmA2i8OQ==", 11, 12),
("""V3: addressFromStringValue("3N5gLQdnHpJtk3uFpfiyUMsatT81zGuyhqL") == Address(base58'3N5gLQdnHpJtk3uFpfiyUMsatT81zGuyhqL')""", "AwkAAAAAAAACCQEAAAAcQGV4dHJVc2VyKGFkZHJlc3NGcm9tU3RyaW5nKQAAAAECAAAAIzNONWdMUWRuSHBKdGszdUZwZml5VU1zYXRUODF6R3V5aHFMCQEAAAAHQWRkcmVzcwAAAAEBAAAAGgFUrOhncsHOXnAEh5eecx07NcnKZJ0FJqAzoIvl0A==", 27, 126),
//("""V5: addressFromStringValue("3N5gLQdnHpJtk3uFpfiyUMsatT81zGuyhqL") == Address(base58'3N5gLQdnHpJtk3uFpfiyUMsatT81zGuyhqL')""", "BQkAAAAAAAACCQEAAAARQGV4dHJOYXRpdmUoMTA2MikAAAABAgAAACMzTjVnTFFkbkhwSnRrM3VGcGZpeVVNc2F0VDgxekd1eWhxTAkBAAAAB0FkZHJlc3MAAAABAQAAABoBVKzoZ3LBzl5wBIeXnnMdOzXJymSdBSagMxtfMCE=", 8, 3),
//("""V5: parseIntValue("012345") == 12345""", "BAkAAAAAAAACCQEAAAANcGFyc2VJbnRWYWx1ZQAAAAECAAAABjAxMjM0NQAAAAAAAAAwOWLjTTs=", 9, 3),
//("""V5: let x = parseIntValue("12345"); x - x == 0""", "BQQAAAABeAkBAAAADXBhcnNlSW50VmFsdWUAAAABAgAAAAUxMjM0NQkAAAAAAAACCQAAZQAAAAIFAAAAAXgFAAAAAXgAAAAAAAAAAAD38ehz", 12, 4),
//("""V3: let x = parseIntValue("12345"); 0 == 0""", "AwQAAAABeAkBAAAADXBhcnNlSW50VmFsdWUAAAABAgAAAAUxMjM0NQkAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAk6EsIQ==", 1, 1),
//("""V3: let x = parseIntValue("123"); let y = parseIntValue("456");  x + y == y + x""", "AwQAAAABeAkBAAAADXBhcnNlSW50VmFsdWUAAAABAgAAAAMxMjMEAAAAAXkJAQAAAA1wYXJzZUludFZhbHVlAAAAAQIAAAADNDU2CQAAAAAAAAIJAABkAAAAAgUAAAABeAUAAAABeQkAAGQAAAACBQAAAAF5BQAAAAF4sUY0sQ==", 59, 43),
//("""V4: let d = ["integer", "boolean", "binary", "string"]; d[0] == "integer"""", "BAQAAAABZAkABEwAAAACAgAAAAdpbnRlZ2VyCQAETAAAAAICAAAAB2Jvb2xlYW4JAARMAAAAAgIAAAAGYmluYXJ5CQAETAAAAAICAAAABnN0cmluZwUAAAADbmlsCQAAAAAAAAIJAAGRAAAAAgUAAAABZAAAAAAAAAAAAAIAAAAHaW50ZWdlcj/hEVY=", 9, 7),
//("""V3: let d = [DataEntry("integer", 100500), DataEntry("boolean", true), DataEntry("binary", base16'68656c6c6f'), DataEntry("string", "world")]; getInteger(d, "integer") == 100500""", "AwQAAAABZAkABEwAAAACCQEAAAAJRGF0YUVudHJ5AAAAAgIAAAAHaW50ZWdlcgAAAAAAAAGIlAkABEwAAAACCQEAAAAJRGF0YUVudHJ5AAAAAgIAAAAHYm9vbGVhbgYJAARMAAAAAgkBAAAACURhdGFFbnRyeQAAAAICAAAABmJpbmFyeQEAAAAFaGVsbG8JAARMAAAAAgkBAAAACURhdGFFbnRyeQAAAAICAAAABnN0cmluZwIAAAAFd29ybGQFAAAAA25pbAkAAAAAAAACCQAEEAAAAAIFAAAAAWQCAAAAB2ludGVnZXIAAAAAAAABiJSeStXa", 21, 23),
//("""V3: let d = [DataEntry("integer", 100500), DataEntry("boolean", true), DataEntry("binary", base16'68656c6c6f'), DataEntry("string", "world")]; getString(d, "string") == "world"""", "AwQAAAABZAkABEwAAAACCQEAAAAJRGF0YUVudHJ5AAAAAgIAAAAHaW50ZWdlcgAAAAAAAAGIlAkABEwAAAACCQEAAAAJRGF0YUVudHJ5AAAAAgIAAAAHYm9vbGVhbgYJAARMAAAAAgkBAAAACURhdGFFbnRyeQAAAAICAAAABmJpbmFyeQEAAAAFaGVsbG8JAARMAAAAAgkBAAAACURhdGFFbnRyeQAAAAICAAAABnN0cmluZwIAAAAFd29ybGQFAAAAA25pbAkAAAAAAAACCQAEEwAAAAIFAAAAAWQCAAAABnN0cmluZwIAAAAFd29ybGRFTMLs", 21, 23),
//("""V3: let x = 1 + 2; x == 3""", "AwQAAAABeAkAAGQAAAACAAAAAAAAAAABAAAAAAAAAAACCQAAAAAAAAIFAAAAAXgAAAAAAAAAAAOZ3gHv", 3, 2),
//("""V3: let x = 2 + 2; let y = x - x; x - y == x""", "AwQAAAABeAkAAGQAAAACAAAAAAAAAAACAAAAAAAAAAACBAAAAAF5CQAAZQAAAAIFAAAAAXgFAAAAAXgJAAAAAAAAAgkAAGUAAAACBQAAAAF4BQAAAAF5BQAAAAF4G74APQ==", 9, 4),
//("""V3: let a = 1 + 2; let b = 2; let c = a + b; b == 2""", "AwQAAAABYQkAAGQAAAACAAAAAAAAAAABAAAAAAAAAAACBAAAAAFiAAAAAAAAAAACBAAAAAFjCQAAZAAAAAIFAAAAAWEFAAAAAWIJAAAAAAAAAgUAAAABYgAAAAAAAAAAAuTY7N4=", 2, 1),
//("""V3: let x = if true then 1 else 1 + 1; x == 1""", "AwQAAAABeAMGAAAAAAAAAAABCQAAZAAAAAIAAAAAAAAAAAEAAAAAAAAAAAEJAAAAAAAAAgUAAAABeAAAAAAAAAAAAQZLIuM=", 3, 1),
//("""V3: let x = if true then if false then 1 + 1 + 1 else 1 + 1 else 1; x == 2""", "AwQAAAABeAMGAwcJAABkAAAAAgkAAGQAAAACAAAAAAAAAAABAAAAAAAAAAABAAAAAAAAAAABCQAAZAAAAAIAAAAAAAAAAAEAAAAAAAAAAAEAAAAAAAAAAAEJAAAAAAAAAgUAAAABeAAAAAAAAAAAAgr3wMQ=", 5, 2),
//("""V3: let a = 1 + 2 + 3; let b = 4 + 5; let c = if false then a else b; c == 9""", "AwQAAAABYQkAAGQAAAACCQAAZAAAAAIAAAAAAAAAAAEAAAAAAAAAAAIAAAAAAAAAAAMEAAAAAWIJAABkAAAAAgAAAAAAAAAABAAAAAAAAAAABQQAAAABYwMHBQAAAAFhBQAAAAFiCQAAAAAAAAIFAAAAAWMAAAAAAAAAAAl/11/T", 5, 2),
//("""V3: let a = unit; let b = unit; let c = unit; let d = unit; let x = if true then a else b; let y = if false then c else d; x == y""", "AwQAAAABYQUAAAAEdW5pdAQAAAABYgUAAAAEdW5pdAQAAAABYwUAAAAEdW5pdAQAAAABZAUAAAAEdW5pdAQAAAABeAMGBQAAAAFhBQAAAAFiBAAAAAF5AwcFAAAAAWMFAAAAAWQJAAAAAAAAAgUAAAABeAUAAAABeei/I5Y=", 9, 1),
//("""V3: let s = size(toString(1000)); s != 0""", "AwQAAAABcwkAATEAAAABCQABpAAAAAEAAAAAAAAAA+gJAQAAAAIhPQAAAAIFAAAAAXMAAAAAAAAAAACmTwkf", 8, 3),
//("""V3: let a = "A"; let x = a + if true then {let c = "C"; c} else {let b = "B"; b}; x == "AC"""", "AwQAAAABYQIAAAABQQQAAAABeAkAASwAAAACBQAAAAFhAwYEAAAAAWMCAAAAAUMFAAAAAWMEAAAAAWICAAAAAUIFAAAAAWIJAAAAAAAAAgUAAAABeAIAAAACQUNpy4Pz", 15, 11),
//("""V3: func first(a: Int, b: Int) = {let x = a + b; x}; first(1, 2) == 3""", "AwoBAAAABWZpcnN0AAAAAgAAAAFhAAAAAWIEAAAAAXgJAABkAAAAAgUAAAABYQUAAAABYgUAAAABeAkAAAAAAAACCQEAAAAFZmlyc3QAAAACAAAAAAAAAAABAAAAAAAAAAACAAAAAAAAAAADefozrQ==", 5, 2),
//("""V3: func f(a: Int) = 1; func g(a: Int) = 2; f(g(1)) == 1""", "AwoBAAAAAWYAAAABAAAAAWEAAAAAAAAAAAEKAQAAAAFnAAAAAQAAAAFhAAAAAAAAAAACCQAAAAAAAAIJAQAAAAFmAAAAAQkBAAAAAWcAAAABAAAAAAAAAAABAAAAAAAAAAABRfhbwA==", 1, 3),
//("""V3: func inc(y: Int) = y + 1; let xxx = 5; inc(xxx) == 6""", "AwoBAAAAA2luYwAAAAEAAAABeQkAAGQAAAACBQAAAAF5AAAAAAAAAAABBAAAAAN4eHgAAAAAAAAAAAUJAAAAAAAAAgkBAAAAA2luYwAAAAEFAAAAA3h4eAAAAAAAAAAABu6Xgew=", 4, 2),
//("""V3: func f() = {func f() = {func f() = {1}; f()}; f()}; f() == 1""", "AwoBAAAAAWYAAAAACgEAAAABZgAAAAAKAQAAAAFmAAAAAAAAAAAAAAAAAQkBAAAAAWYAAAAACQEAAAABZgAAAAAJAAAAAAAAAgkBAAAAAWYAAAAAAAAAAAAAAAABHY7j7w==", 1, 2),
//("""V3: func f(a: Int) = a; f(1) == 1""", "AwoBAAAAAWYAAAABAAAAAWEFAAAAAWEJAAAAAAAAAgkBAAAAAWYAAAABAAAAAAAAAAABAAAAAAAAAAABAYVjTw==", 2, 2),
//("""V3: func inc(xxx: Int) = xxx + 1; let xxx = 5; inc(xxx) == 6""", "AwoBAAAAA2luYwAAAAEAAAADeHh4CQAAZAAAAAIFAAAAA3h4eAAAAAAAAAAAAQQAAAADeHh4AAAAAAAAAAAFCQAAAAAAAAIJAQAAAANpbmMAAAABBQAAAAN4eHgAAAAAAAAAAAZNSkZq", 4, 2),
//("""V3: func inc(y: Int) = y + 1; let xxx = 5; inc(xxx) == 6""", "AwoBAAAAA2luYwAAAAEAAAABeQkAAGQAAAACBQAAAAF5AAAAAAAAAAABBAAAAAN4eHgAAAAAAAAAAAUJAAAAAAAAAgkBAAAAA2luYwAAAAEFAAAAA3h4eAAAAAAAAAAABu6Xgew=", 4, 2),
//("""V3: func inc(y: Int) = y + 1; inc({let x = 5; x}) == 6""", "AwoBAAAAA2luYwAAAAEAAAABeQkAAGQAAAACBQAAAAF5AAAAAAAAAAABCQAAAAAAAAIJAQAAAANpbmMAAAABBAAAAAF4AAAAAAAAAAAFBQAAAAF4AAAAAAAAAAAGOrtXsw==", 4, 2),
//("""V3: func add(x: Int, y: Int) = x + y; let a = 2; let b = 3; add(a, b) == 5""", "AwoBAAAAA2FkZAAAAAIAAAABeAAAAAF5CQAAZAAAAAIFAAAAAXgFAAAAAXkEAAAAAWEAAAAAAAAAAAIEAAAAAWIAAAAAAAAAAAMJAAAAAAAAAgkBAAAAA2FkZAAAAAIFAAAAAWEFAAAAAWIAAAAAAAAAAAXSOexF", 6, 2),
//("""V3: func add(x: Int, y: Int) = x + y; let a = 2; let y = 3; add(a, y) == 5""", "AwoBAAAAA2FkZAAAAAIAAAABeAAAAAF5CQAAZAAAAAIFAAAAAXgFAAAAAXkEAAAAAWEAAAAAAAAAAAIEAAAAAXkAAAAAAAAAAAMJAAAAAAAAAgkBAAAAA2FkZAAAAAIFAAAAAWEFAAAAAXkAAAAAAAAAAAVtyJg5", 6, 2),
//("""V3: func add(x: Int, y: Int) = x + y; let x = 2; let y = 3; add(x, y) == 5""", "AwoBAAAAA2FkZAAAAAIAAAABeAAAAAF5CQAAZAAAAAIFAAAAAXgFAAAAAXkEAAAAAXgAAAAAAAAAAAIEAAAAAXkAAAAAAAAAAAMJAAAAAAAAAgkBAAAAA2FkZAAAAAIFAAAAAXgFAAAAAXkAAAAAAAAAAAVMfO15", 6, 2),
//("""V3: let me = 1 + 1 + 1 + 1; func third(p: Int) = me; func second(me: Int) = third(me); func first() = second(1); first() + first() + first() + first() + first() + first() == 24""", "BAQAAAACbWUJAABkAAAAAgkAAGQAAAACCQAAZAAAAAIAAAAAAAAAAAEAAAAAAAAAAAEAAAAAAAAAAAEAAAAAAAAAAAEKAQAAAAV0aGlyZAAAAAEAAAABcAUAAAACbWUKAQAAAAZzZWNvbmQAAAABAAAAAm1lCQEAAAAFdGhpcmQAAAABBQAAAAJtZQoBAAAABWZpcnN0AAAAAAkBAAAABnNlY29uZAAAAAEAAAAAAAAAAAEJAAAAAAAAAgkAAGQAAAACCQAAZAAAAAIJAABkAAAAAgkAAGQAAAACCQAAZAAAAAIJAQAAAAVmaXJzdAAAAAAJAQAAAAVmaXJzdAAAAAAJAQAAAAVmaXJzdAAAAAAJAQAAAAVmaXJzdAAAAAAJAQAAAAVmaXJzdAAAAAAJAQAAAAVmaXJzdAAAAAAAAAAAAAAAABikW/Rn", 21, 14),
//("""V3: let me = 1 + 1 + 1 + 1; func third(p: Int) = me; func second(me: Int) = third(me); func first() = second(1); first() + first() == 8""", "BAQAAAACbWUJAABkAAAAAgkAAGQAAAACCQAAZAAAAAIAAAAAAAAAAAEAAAAAAAAAAAEAAAAAAAAAAAEAAAAAAAAAAAEKAQAAAAV0aGlyZAAAAAEAAAABcAUAAAACbWUKAQAAAAZzZWNvbmQAAAABAAAAAm1lCQEAAAAFdGhpcmQAAAABBQAAAAJtZQoBAAAABWZpcnN0AAAAAAkBAAAABnNlY29uZAAAAAEAAAAAAAAAAAEJAAAAAAAAAgkAAGQAAAACCQEAAAAFZmlyc3QAAAAACQEAAAAFZmlyc3QAAAAAAAAAAAAAAAAIg917jQ==", 9, 6),
//("""V3: let b = false; let x = if b then {func aaa(i:Int) = i + i + i + i + i + i; aaa(1)} else {func aaa(i: Int) = i + i + i + i; aaa(2)}; x == 8""", "AwQAAAABYgcEAAAAAXgDBQAAAAFiCgEAAAADYWFhAAAAAQAAAAFpCQAAZAAAAAIJAABkAAAAAgkAAGQAAAACCQAAZAAAAAIJAABkAAAAAgUAAAABaQUAAAABaQUAAAABaQUAAAABaQUAAAABaQUAAAABaQkBAAAAA2FhYQAAAAEAAAAAAAAAAAEKAQAAAANhYWEAAAABAAAAAWkJAABkAAAAAgkAAGQAAAACCQAAZAAAAAIFAAAAAWkFAAAAAWkFAAAAAWkFAAAAAWkJAQAAAANhYWEAAAABAAAAAAAAAAACCQAAAAAAAAIFAAAAAXgAAAAAAAAAAAgfLlvD", 11, 4),
//("""V3: let x = 0; let y = if true then x else x + 1; y == 0""", "AgQAAAABeAAAAAAAAAAAAAQAAAABeQMGBQAAAAF4CQAAZAAAAAIFAAAAAXgAAAAAAAAAAAEJAAAAAAAAAgUAAAABeQAAAAAAAAAAALitwEo=", 4, 1),
//("""V3: let a = false; if false then a else !a""", "AwQAAAABYQcDBwUAAAABYQkBAAAAASEAAAABBQAAAAFhaKH61g==", 4, 1),
//("""V3: let a = 1; if true then {let b = 2; a == 1} else {let b = 2; a + b == 3}""", "AgQAAAABYQAAAAAAAAAAAQMGBAAAAAFiAAAAAAAAAAACCQAAAAAAAAIFAAAAAWEAAAAAAAAAAAEEAAAAAWIAAAAAAAAAAAIJAAAAAAAAAgkAAGQAAAACBQAAAAFhBQAAAAFiAAAAAAAAAAADxhrdbw==", 3, 1),
//("""V3: let a = 1; if true then a == 1 else {let b = 2; a + b == 3}""", "AgQAAAABYQAAAAAAAAAAAQMGCQAAAAAAAAIFAAAAAWEAAAAAAAAAAAEEAAAAAWIAAAAAAAAAAAIJAAAAAAAAAgkAAGQAAAACBQAAAAFhBQAAAAFiAAAAAAAAAAADBu60OQ==", 3, 1),
//("""V3: let a = 1; let b = 2; let c = if true then a else a + b; c == 1""", "AwQAAAABYQAAAAAAAAAAAQQAAAABYgAAAAAAAAAAAgQAAAABYwMGBQAAAAFhCQAAZAAAAAIFAAAAAWEFAAAAAWIJAAAAAAAAAgUAAAABYwAAAAAAAAAAAUWOLX8=", 4, 1),
//("""V3: let a = 1; let b = 2; let c = if false then a else a + b; c == 3""", "AwQAAAABYQAAAAAAAAAAAQQAAAABYgAAAAAAAAAAAgQAAAABYwMHBQAAAAFhCQAAZAAAAAIFAAAAAWEFAAAAAWIJAAAAAAAAAgUAAAABYwAAAAAAAAAAA+RWBBg=", 6, 2),
//("""V3: let a = 1; if true then {let b = 2; a + b == 3} else {let b = 2; a == 1}""", "AwQAAAABYQAAAAAAAAAAAQMGBAAAAAFiAAAAAAAAAAACCQAAAAAAAAIJAABkAAAAAgUAAAABYQUAAAABYgAAAAAAAAAAAwQAAAABYgAAAAAAAAAAAgkAAAAAAAACBQAAAAFhAAAAAAAAAAABQ00EmQ==", 5, 2),
//("""V3: let a = 1; let b = a; let c = a + b; c == 2""", "AwQAAAABYQAAAAAAAAAAAQQAAAABYgUAAAABYQQAAAABYwkAAGQAAAACBQAAAAFhBQAAAAFiCQAAAAAAAAIFAAAAAWMAAAAAAAAAAAJgDWGp", 6, 2),
//("""V3: let a = 1; func f() = {if true then {func f() = {let b = 2; a == 1}; f()} else {func f() = {let b = 2; a + b == 3}; f()}}; f()""", "AwQAAAABYQAAAAAAAAAAAQoBAAAAAWYAAAAAAwYKAQAAAAFmAAAAAAQAAAABYgAAAAAAAAAAAgkAAAAAAAACBQAAAAFhAAAAAAAAAAABCQEAAAABZgAAAAAKAQAAAAFmAAAAAAQAAAABYgAAAAAAAAAAAgkAAAAAAAACCQAAZAAAAAIFAAAAAWEFAAAAAWIAAAAAAAAAAAMJAQAAAAFmAAAAAAkBAAAAAWYAAAAACEd93A==", 3, 1),
//("""V3: func a(v: Int) = v; func b(x: Int, y: Int) = a(x) + a(y); let x = 1; let y = 2; b(x, y) == 3""", "AwoBAAAAAWEAAAABAAAAAXYFAAAAAXYKAQAAAAFiAAAAAgAAAAF4AAAAAXkJAABkAAAAAgkBAAAAAWEAAAABBQAAAAF4CQEAAAABYQAAAAEFAAAAAXkEAAAAAXgAAAAAAAAAAAEEAAAAAXkAAAAAAAAAAAIJAAAAAAAAAgkBAAAAAWIAAAACBQAAAAF4BQAAAAF5AAAAAAAAAAADMSWjrA==", 8, 4),
//("""V3: @Verifier(tx) func verify() = true", "AAIDAAAAAAAAAAIIAQAAAAAAAAAAAAAAAQAAAAJ0eAEAAAAGdmVyaWZ5AAAAAAaQqCec", 0, 0),
//("V3: let a = 1\n @Verifier(tx) func verify() = true", "AAIDAAAAAAAAAAIIAQAAAAEAAAAAAWEAAAAAAAAAAAEAAAAAAAAAAQAAAAJ0eAEAAAAGdmVyaWZ5AAAAAAZyQF8r", 0, 0),
//("V3: let a = 1\nfunc inc(v: Int) = {v + 1}\n@Verifier(tx) func verify() = false", "AAIDAAAAAAAAAAIIAQAAAAIAAAAAAWEAAAAAAAAAAAEBAAAAA2luYwAAAAEAAAABdgkAAGQAAAACBQAAAAF2AAAAAAAAAAABAAAAAAAAAAEAAAACdHgBAAAABnZlcmlmeQAAAAAGwI5hqw==", 0, 0),
//("V3: let a = 1\nfunc inc(v: Int) = {v + 1}\n@Verifier(tx) func verify() = inc(a) == 2", "AAIDAAAAAAAAAAIIAQAAAAIAAAAAAWEAAAAAAAAAAAEBAAAAA2luYwAAAAEAAAABdgkAAGQAAAACBQAAAAF2AAAAAAAAAAABAAAAAAAAAAEAAAACdHgBAAAABnZlcmlmeQAAAAAJAAAAAAAAAgkBAAAAA2luYwAAAAEFAAAAAWEAAAAAAAAAAAJtD5WX", 4, 2),
//("V3: let a = 1\nlet b = 1\nfunc inc(v: Int) = {v + 1}\nfunc add(x: Int, y: Int) = {x + y}\n@Verifier(tx) func verify() = inc(a) == add(a, b)", "AAIDAAAAAAAAAAIIAQAAAAQAAAAAAWEAAAAAAAAAAAEAAAAAAWIAAAAAAAAAAAEBAAAAA2luYwAAAAEAAAABdgkAAGQAAAACBQAAAAF2AAAAAAAAAAABAQAAAANhZGQAAAACAAAAAXgAAAABeQkAAGQAAAACBQAAAAF4BQAAAAF5AAAAAAAAAAEAAAACdHgBAAAABnZlcmlmeQAAAAAJAAAAAAAAAgkBAAAAA2luYwAAAAEFAAAAAWEJAQAAAANhZGQAAAACBQAAAAFhBQAAAAFiDbIkmw==", 9, 3),
//("V3: func b(x: Int) = {func a(y: Int) = x + y; a(1) + a(2)}; b(2) + b(3) == 16", "AwoBAAAAAWIAAAABAAAAAXgKAQAAAAFhAAAAAQAAAAF5CQAAZAAAAAIFAAAAAXgFAAAAAXkJAABkAAAAAgkBAAAAAWEAAAABAAAAAAAAAAABCQEAAAABYQAAAAEAAAAAAAAAAAIJAAAAAAAAAgkAAGQAAAACCQEAAAABYgAAAAEAAAAAAAAAAAIJAQAAAAFiAAAAAQAAAAAAAAAAAwAAAAAAAAAAEHsYhwk=", 16, 8),
//("V3: func a(v: Int) = 1; func b(x: Int) = a(1) + a(x); let x = 1; b(x) == 2", "AwoBAAAAAWEAAAABAAAAAXYAAAAAAAAAAAEKAQAAAAFiAAAAAQAAAAF4CQAAZAAAAAIJAQAAAAFhAAAAAQAAAAAAAAAAAQkBAAAAAWEAAAABBQAAAAF4BAAAAAF4AAAAAAAAAAABCQAAAAAAAAIJAQAAAAFiAAAAAQUAAAABeAAAAAAAAAAAAoNKT2c=", 4, 4),
//("V3: func a(v: Int) = 1; func b(x: Int) = a(x) + a(1); let x = 1; b(x) == 2", "AwoBAAAAAWEAAAABAAAAAXYAAAAAAAAAAAEKAQAAAAFiAAAAAQAAAAF4CQAAZAAAAAIJAQAAAAFhAAAAAQUAAAABeAkBAAAAAWEAAAABAAAAAAAAAAABBAAAAAF4AAAAAAAAAAABCQAAAAAAAAIJAQAAAAFiAAAAAQUAAAABeAAAAAAAAAAAAjrCFFA=", 4, 4),
//("V3: let x = 1; let y = 2; func a(x: Int) = x; func b(x: Int, y: Int) = {let r = a(x) + a(y); r}; b(x, y) == 3", "AwQAAAABeAAAAAAAAAAAAQQAAAABeQAAAAAAAAAAAgoBAAAAAWEAAAABAAAAAXgFAAAAAXgKAQAAAAFiAAAAAgAAAAF4AAAAAXkEAAAAAXIJAABkAAAAAgkBAAAAAWEAAAABBQAAAAF4CQEAAAABYQAAAAEFAAAAAXkFAAAAAXIJAAAAAAAAAgkBAAAAAWIAAAACBQAAAAF4BQAAAAF5AAAAAAAAAAAD32P71Q==", 9, 4),
//("V3: let x = 1; let y = 2; func a(x: Int) = x; func b(x: Int, y: Int) = {let r = a(y) + a(x); r}; b(x, y) == 3", "AwQAAAABeAAAAAAAAAAAAQQAAAABeQAAAAAAAAAAAgoBAAAAAWEAAAABAAAAAXgFAAAAAXgKAQAAAAFiAAAAAgAAAAF4AAAAAXkEAAAAAXIJAABkAAAAAgkBAAAAAWEAAAABBQAAAAF5CQEAAAABYQAAAAEFAAAAAXgFAAAAAXIJAAAAAAAAAgkBAAAAAWIAAAACBQAAAAF4BQAAAAF5AAAAAAAAAAADoJh89A==", 9, 4),
//("V4: let x = (1, "Two", true); x._3""", "BAQAAAABeAkABRUAAAADAAAAAAAAAAABAgAAAANUd28GCAUAAAABeAAAAAJfM5iN5Ik=", 3, 1),
//("V4: let x = if true then (1, 2) else (true, \"q\"); match x {case _: (Boolean, String) => false; case _: (Int, Int) => true}", "BAQAAAABeAMGCQAFFAAAAAIAAAAAAAAAAAEAAAAAAAAAAAIJAAUUAAAAAgYCAAAAAXEEAAAAByRtYXRjaDAFAAAAAXgDCQAAAQAAAAIFAAAAByRtYXRjaDACAAAAEShCb29sZWFuLCBTdHJpbmcpBwMJAAABAAAAAgUAAAAHJG1hdGNoMAIAAAAKKEludCwgSW50KQYJAAACAAAAAQIAAAALTWF0Y2ggZXJyb3IMWMC4", 9, 3),
//("V4: let t = ((1, \"Two\", true), (5, \"Six\", false)); t._1._3", "BAQAAAABdAkABRQAAAACCQAFFQAAAAMAAAAAAAAAAAECAAAAA1R3bwYJAAUVAAAAAwAAAAAAAAAABQIAAAADU2l4BwgIBQAAAAF0AAAAAl8xAAAAAl8zuG3UeQ==", 6, 3),
//("V4: !sigVerify_8Kb(base58'', base58'',base58'')", "BAkBAAAAASEAAAABCQAJxAAAAAMBAAAAAAEAAAAAAQAAAADm58fQ", 49, 48),
//("V4: !sigVerify_64Kb(base58'', base58'',base58'')", "BAkBAAAAASEAAAABCQAJxwAAAAMBAAAAAAEAAAAAAQAAAACYsebz", 104, 103),
//("V4: containsElement([base58'', base58''],base58'')", "BAkBAAAAD2NvbnRhaW5zRWxlbWVudAAAAAIJAARMAAAAAgEAAAAACQAETAAAAAIBAAAAAAUAAAADbmlsAQAAAAAXL3j5", 15, 7),
//("V5: pow((100), 4, 5, 1, 2, FLOOR) == 10", "BQkAAAAAAAACCQAAbAAAAAYAAAAAAAAAAGQAAAAAAAAAAAQAAAAAAAAAAAUAAAAAAAAAAAEAAAAAAAAAAAIFAAAABUZMT09SAAAAAAAAAAAK3GfUhw==", 102, 101),
    )

    for ((txt, bs, v5complexity, v6complexity) <- scripts) {
      val script = Script.fromBase64String(bs).explicitGet().asInstanceOf[ExprScriptImpl]
      val ctx = lazyContexts((DirectiveSet(script.stdLibVersion, Account, Expression).explicitGet(), true, true)).value()
      val evalCtx = ctx.evaluationContext(Common.emptyBlockchainEnvironment())
      val (_, comp, res) = Ev.run(script.expr, evalCtx, ComplexityLimit.Unlimited, false, script.stdLibVersion)
      withClue(txt) {
        println(res)
        comp shouldEqual v5complexity
      }
    }
  }
}
