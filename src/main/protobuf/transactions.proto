// Transactions
syntax = "proto3";
option java_package = "com.wavesplatform.protobuf.transaction";
import "script.proto";
import "recipient.proto";

message AssetAmount {
    bytes assetId = 1;
    int64 amount = 2;
}

message Amount {
    oneof amount {
        int64 wavesAmount = 1;
        AssetAmount assetAmount = 2;
    }
}

message SignedTransaction {
    Transaction transaction = 1;
    repeated bytes proofs = 2;
}

message Transaction {
    int32 chainId = 1;
    bytes senderPublicKey = 2;
    Amount fee = 3;
    int64 timestamp = 4;
    int32 version = 5;

    oneof data {
        GenesisTransactionData genesis = 101;
        PaymentTransactionData payment = 102;
        IssueTransactionData issue = 103;
        TransferTransactionData transfer = 104;
        ReissueTransactionData reissue = 105;
        BurnTransactionData burn = 106;
        ExchangeTransactionData exchange = 107;
        LeaseTransactionData lease = 108;
        LeaseCancelTransactionData leaseCancel = 109;
        CreateAliasTransactionData createAlias = 110;
        MassTransferTransactionData massTransfer = 111;
        DataTransactionData dataTransaction = 112;
        SetScriptTransactionData setScript = 113;
        SponsorFeeTransactionData sponsorFee = 114;
        SetAssetScriptTransactionData setAssetScript = 115;
        // TODO: 116 = contract invocation
    };
};

message GenesisTransactionData {
    bytes recipientAddress = 1;
    int64 amount = 2;
};

message PaymentTransactionData {
    bytes address = 1;
    int64 amount = 2;
};

message TransferTransactionData {
    Recipient recipient = 1;
    Amount amount = 2;
    bytes attachment = 3;
};

message CreateAliasTransactionData {
    string alias = 1;
};

message DataTransactionData {
    message DataEntry {
        string key = 1;
        oneof value {
            int64 intValue = 10;
            bool boolValue = 11;
            bytes binaryValue = 12;
            string stringValue = 13;
        };
    };

    repeated DataEntry data = 1;
};

message MassTransferTransactionData {
    message Transfer {
        Recipient address = 1;
        int64 amount = 2;
    };

    bytes assetId = 1;
    repeated Transfer transfers = 2;
    bytes attachment = 3;
};

message LeaseTransactionData {
    Recipient recipient = 1;
    int64 amount = 2;
};

message LeaseCancelTransactionData {
    bytes leaseId = 1;
};

message BurnTransactionData {
    AssetAmount assetAmount = 1;;
};

message IssueTransactionData {
    bytes name = 1;
    bytes description = 2;
    int64 amount = 3;
    int32 decimals = 4;
    bool reissuable = 5;
    Script script = 6;
};


message ReissueTransactionData {
    AssetAmount assetAmount = 1;
    bool reissuable = 2;
};

message SetAssetScriptTransactionData {
    bytes assetId = 1;
    Script script = 2;
};

message SetScriptTransactionData {
    Script script = 2;
};

message ExchangeTransactionData {
    message BuySellOrders {
        Order buyOrder = 1;
        Order sellOrder = 2;
    }

    message MakerTakerOrders {
        Order makerOrder = 1;
        Order takerOrder = 2;
    }

    message Order {
        enum Side {
            BUY = 0;
            SELL = 1;
        };

        message AssetPair {
            bytes amountAssetId = 1;
            bytes priceAssetId = 2;
        };

        int32 chainId = 1;
        bytes senderPublicKey = 2;
        bytes matcherPublicKey = 3;
        AssetPair assetPair = 4;
        Side orderSide = 5;
        int64 amount = 6;
        int64 price = 7;
        int64 timestamp = 8;
        int64 expiration = 9;
        Amount matcherFee = 10;
        int32 version = 11;
        repeated bytes proofs = 12;
    };

    oneof orders {
        BuySellOrders buySellOrders = 1;
        MakerTakerOrders makerTakerOrders = 2;
    }
    int64 amount = 3;
    int64 price = 4;
    int64 buyMatcherFee = 5;
    int64 sellMatcherFee = 6;
};

message SponsorFeeTransactionData {
    AssetAmount minFee = 1;
};
