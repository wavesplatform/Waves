# Waves node settins
waves {
  # Node base directory
  directory = ${user.home}"/waves"

  # Application logging level. Could be TRACE | DEBUG | INFO | WARN | ERROR. Default value is INFO.
  logging-level = INFO

  # P2P Network settings
  network {
    # Peers and blacklist storage file
    file = ${waves.directory}"/data/peers.dat"

    # String with IP address and port to send as external address during handshake. Could be set automatically if UPnP
    # is enabled.
    #
    # If `declared-address` is set, which is the common scenario for nodes running in the cloud, the node will just
    # listen to incoming connections on `bind-address:port` and broadcast its `declared-address` to its peers. UPnP
    # is supposed to be disabled in this scenario.
    #
    # If declared address is not set and UPnP is not enabled, the node will not listen to incoming connections at all.
    #
    # If declared address is not set and UPnP is enabled, the node will attempt to connect to an IGD, retrieve its
    # external IP address and configure the gateway to allow traffic through. If the node succeeds, the IGD's external
    # IP address becomes the node's declared address.
    #
    # In some cases, you may both set `decalred-address` and enable UPnP (e.g. when IGD can't reliably determine its
    # external IP address). In such cases the node will attempt to configure an IGD to pass traffic from external port
    # to `bind-address:port`. Please note, however, that this setup is not recommended.
    # declared-address = "1.2.3.4:6863"

    # Network address
    bind-address = "0.0.0.0"

    # Port number
    port = 6863

    # Node name to send during handshake. Comment this string out to set random node name.
    # node-name = "default-node-name"

    # Node nonce to send during handshake. Should be different if few nodes runs on the same external IP address. Comment this out to set random nonce.
    # nonce = 0

    # List of IP addresses of well known nodes.
    known-peers = ["52.30.47.67:6863", "52.28.66.217:6863", "52.77.111.219:6863", "52.51.92.182:6863"]

    # How long the information about peer stays in database after the last communication with it
    peers-data-residence-time = 1d

    # How long peer stays in blacklist after getting in it
    black-list-residence-time = 10m

    # How many network inbound network connections can be made
    max-inbound-connections = 30

    # Number of outbound network connections
    max-outbound-connections = 30

    # Number of connections from single host
    max-single-host-connections = 3

    # Timeout on network communication with other peers
    connection-timeout = 30s

    # Network buffer size
    outbound-buffer-size = 16M

    # Size of circular buffer to store unverified (not properly handshaked) peers
    max-unverified-peers = 1000

    # How often connected peers list should be broadcasted
    peers-broadcast-interval = 2m

    upnp {
      # Enable UPnP tunnel creation only if you router/gateway supports it. Useful if your node is runnin in home
      # network. Completely unuseful if you node is in cloud.
      enable = no

      # UPnP timeouts
      gateway-timeout = 7s
      discover-timeout = 3s
    }
  }

  # Wallet settings
  wallet {
    # Path to wallet file
    file = ${waves.directory}"/wallet/wallet.dat"

    # Password to protect wallet file
    password = "some string as password"

    # By default, the node will attemt to generate a new seed. To use a specific seed, uncomment the following line and
    # specify your base58-encoded seed.
    # seed = "BASE58SEED"
  }

  # Blockchain settings
  blockchain {
    # Path to blockchain file
    blockchain-file = ${waves.directory}"/data/blockchain.dat"
    state-file = ${waves.directory}"/data/state.dat"
    checkpoint-file = ${waves.directory}"/data/checkpoint.dat"

    # Min buffer size. Fast rollback is possible up to this value.
    minimum-in-memory-diff-blocks = 200

    # Blockchain type. Could be TESTNET | MAINNET | CUSTOM. Default value is TESTNET.
    type = TESTNET

    # 'custom' section present only if CUSTOM blockchain type is set. It's impossible to overwrite predefined 'testnet' and 'mainnet' configurations.
    #    custom {
    #      # Address feature character. Used to prevent mixin up addresses from different networks.
    #      address-scheme-character = "C"
    #
    #      # Timestamps/heights of activation/deactivation of different funcions.
    #      functionality {
    #        allow-temporary-negative-until = 0
    #        allow-invalid-payment-transactions-by-timestamp = 0
    #        require-sorted-transactions-after = 0
    #        generation-balance-depth-from-50-to-1000-after-height = 0
    #        minimal-generating-balance-after = 0
    #        allow-transactions-from-future-until = 0
    #        allow-unissued-assets-until = 0
    #        allow-burn-transaction-after = 0
    #        require-payment-unique-id-after = 0
    #        allow-exchange-transaction-after: 0
    #        allow-createalias-transaction-after: 0
    #        allow-make-asset-name-unique-transaction-after: 0
    #        allow-leased-balance-transfer-until: 0
    #      }
    #
    #      # List of genesis transactions
    #      genesis {
    #        # Timestamp of genesis block and transactions in it
    #        timestamp = 1460678400000
    #
    #        # Genesis block signature
    #        signature = "BASE58BLOCKSIGNATURE"
    #
    #        # Initial balance in smallest units
    #        initial-balance = 100000000000000
    #
    #        # Initial base target
    #        initial-base-target =153722867
    #
    #        # Average delay between blocks
    #        average-block-delay = 60s
    #
    #        # List of genesis transactions
    #        transactions = [
    #          {recipient = "BASE58ADDRESS1", amount = 50000000000000},
    #          {recipient = "BASE58ADDRESS2", amount = 50000000000000}
    #        ]
    #      }
    #    }
  }

  # Checkpoints settings
  checkpoints {
    # Public key for checkpoints verification, default TESTNET public key
    public-key = "4PvoqxpWi7kCA9N3UXcEB9CZx4iPPeHX9jSYdAioPhnr"
  }

  # Transaction fees for different types of transactions
  fees {
    payment {
      WAVES = 100000
    }
    issue {
      WAVES = 100000000
    }
    transfer {
      WAVES = 100000
    }
    reissue {
      WAVES = 100000
    }
    burn {
      WAVES = 100000
    }
    exchange {
      WAVES = 300000
    }
    lease {
      WAVES = 100000
    }
    lease-cancel {
      WAVES = 100000
    }
    create-alias {
      WAVES = 100000
    }
    make-asset-name-unique {
      WAVES = 100000
    }
  }

  # Matcher settings
  matcher {
    # Enable/disable matcher
    enable = no

    # Matcher's account address
    account = ""

    # Matcher REST API bind address
    bind-address = "127.0.0.1"

    # Matcher REST API port
    port = 6886

    # Minimul allowed order fee
    min-order-fee = 300000

    # Fee of order match transaction
    order-match-tx-fee = 300000

    # Matcher's directories
    matcher-directory = ${waves.directory}"/matcher"
    journal-directory = ${waves.matcher.matcher-directory}"/journal"
    snapshots-directory = ${waves.matcher.matcher-directory}"/snapshots"
    order-history-file = ${waves.matcher.matcher-directory}"/orderhistory.dat"

    # Snapshots creation interval
    snapshots-interval = 1d

    # Maximum allowed amount of open orders
    max-open-orders = 1000

    # Base assets used as price assets
    price-assets: []

    # Prefefined ordering of base assets
    predefined-pairs: []

    # Maximum difference with Matcher server time
    max-timestamp-diff = 3h

  }

  # New blocks generator settings
  miner {
    # Enable/disable block generation
    enable = yes

    # Required number of connections (both incoming and outgoing) to attempt block generation. Setting this value to 0
    # enables "offline generation".
    quorum = 1

    # Enable block generation only in the last block is not older the given period of time
    interval-after-last-block-then-generation-is-allowed = 1d
  }

  # Node's REST API settings
  rest-api {
    # Enable/disable REST API
    enable = yes

    # Network address to bind to
    bind-address = "127.0.0.1"

    # Port to listen to REST API requests
    port = 6869

    # Hash of API key string
    api-key-hash = "H6nsiifwYKYEx6YzYD7woP1XCn72RVvx6tC1zjjLXqsu"

    # Enable/disable CORS support
    cors = yes
  }

  # Nodes synchronization settings
  synchronization {

    # How many blocks could be rolled back if fork is detected. If fork is longer than this rollback is impossible.
    max-rollback = 100

    # I don't know
    max-chain-length = 101

    # Load only entire chain from peer then requested
    load-entire-chain = yes

    # Timeout to recieve all requested blocks
    synchronization-timeout = 30s

    # Stick to one peer while recieving requested blocks
    pin-to-initial-peer = yes

    # How many times try to perform synchronization before sending peer to blacklist
    retries-before-blacklisting = 2

    # How many times to retry operations
    operation-retires = 3

    # Broadcast score every...
    score-broadcast-interval = 30s

    # Time to live for broadcasted score
    score-ttl = 90s
  }

  # Unverified transactions pool settings
  utx {

    # Pool size
    size = 10000

    # Random transaction broadcast interval
    broadcast-interval = 30s
  }
}

# WARNING: No user-configurable settings below this line.
akka {
  loglevel = "INFO"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-config-on-start = off
  log-dead-letters-during-shutdown = false

  actor {
    debug {
      lifecycle = off
      autoreceive = off
      receive = off
    }

    serializers {
      matcher = "com.wavesplatform.matcher.model.MatcherSerializer"
    }

    serialization-bindings {
      "java.io.Serializable" = none
      "com.wavesplatform.matcher.model.Events$Event" = matcher
      "com.wavesplatform.matcher.market.OrderBookActor$Snapshot" = matcher
      "com.wavesplatform.matcher.market.MatcherActor$OrderBookCreated" = matcher
    }
  }

  http.server.parsing {
    max-method-length = 64
    max-content-length = 1m
  }

  io.tcp {
    direct-buffer-size = 1536 KiB
    trace-logging = off
  }

  persistence {
    journal {
      plugin = akka.persistence.journal.leveldb
      leveldb {
        dir = "target/persistence/journal"
        native = on
      }
    }
    snapshot-store {
      plugin = akka.persistence.snapshot-store.local
      local.dir = "target/persistence/snapshots"
    }
  }
}
