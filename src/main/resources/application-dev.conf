app {
  product = "Waves"
  release = "Release0"
  version = "0.5.1-SNAPSHOT"
}

akka {
  loglevel = "DEBUG"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-config-on-start = on
  actor {
    debug {
      # enable DEBUG logging of actor lifecycle changes
      lifecycle = on
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = on
      # enable function of LoggingReceive, which is to log any received message at DEBUG level
      receive = on
    }
  }
  log-dead-letters-during-shutdown = false
  http {
    server {
      parsing {
        max-method-length = 64
        max-content-length = 1m
      }
    }
  }
}

akka {
  persistence {
    journal {
      plugin = akka.persistence.journal.leveldb
      leveldb {
        dir = "target/persistence/journal"
        native = on
      }
    }
    snapshot-store {
      plugin = akka.persistence.snapshot-store.local
      local.dir = "target/persistence/snapshots"
    }
  }
}

akka {
  actor {
    serializers {
      matcher = "com.wavesplatform.matcher.model.MatcherSerializer"
    }
    serialization-bindings {
      "java.io.Serializable" = none
      "com.wavesplatform.matcher.model.Events$Event" = matcher
      "com.wavesplatform.matcher.market.OrderBookActor$Snapshot" = matcher
      "com.wavesplatform.matcher.market.MatcherActor$OrderBookCreated" = matcher
    }
  }
}
