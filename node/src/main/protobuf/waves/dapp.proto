syntax = "proto3";
package waves.api;
option java_package = "com.wavesplatform.protobuf.dapp";

message DApp {
    bytes meta = 1;
    repeated Declaration decs = 2;
    repeated Function callableFuncs = 3;
    optional Function verifierFuncOpt = 4;

    message Declaration {
        oneof value {
            Let let = 1;
            Func func = 2;
        }
    }

    message Let {
        string name = 1;
        Expr value = 2;
    }
    message Func {
        string name = 1;
        repeated string args = 2;
        Expr body = 3;
    }

    message Evaluated {
        oneof value {
            string fail = 1;
            string constString = 2;
            int64 constLong = 3;
            bytes constByteStr = 4;
            bool constBoolean = 5;
            bytes constBigInt = 6;
            Arr arr = 7;
            CaseObj caseObj = 8;
        }
    }

    message Expr {
        oneof value {
            Evaluated evaluated = 1;
            Block block = 2;
            FunctionCall functionCall = 3;
            Getter getter = 4;
            If if = 5;
            LetBlock letBlock = 6;
            string ref = 7;
        }
    }

    message Arr {
        repeated Evaluated xs = 1;
    }
    message Block {
        Declaration dec = 1;
        Expr body = 2;
    }
    message FunctionCall {
        FunctionHeader function = 1;
        repeated Expr args = 2;

        message FunctionHeader {
            oneof value {
                int32 native = 1;
                User user = 2;
            }

            message User {
                string internalName = 1;
                string name = 2;
            }
        }
    }
    message Getter {
        Expr expr = 1;
        string field = 2;
    }
    message If {
        Expr cond = 1;
        Expr ifTrue = 2;
        Expr ifFalse = 3;
    }
    message LetBlock {
        Let let = 1;
        Expr body = 2;
    }
    message CaseObj {
        string caseType = 1;
        map<string, Evaluated> fields = 2;
    }

    message Function {
        string annotation = 1;
        Func u = 2;
    }
}